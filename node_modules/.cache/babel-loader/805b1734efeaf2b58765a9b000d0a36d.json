{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/js/JS _dz/goit-react/goit-react-hw-02-feedback/src/components/FeedbackOptions/FeedbackOptions.jsx\";\nimport s from \"./FeedbackOptions.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FeedbackOptions = ({\n  options,\n  plusFeedback\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: s.conteiner,\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: plusFeedback(option),\n          name: option,\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }, this)\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = FeedbackOptions;\nexport default FeedbackOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackOptions\");","map":{"version":3,"sources":["/Users/mac/Desktop/js/JS _dz/goit-react/goit-react-hw-02-feedback/src/components/FeedbackOptions/FeedbackOptions.jsx"],"names":["s","FeedbackOptions","options","plusFeedback","conteiner","map","option"],"mappings":";AAAA,OAAOA,CAAP,MAAc,8BAAd;;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA+B;AACrD,sBACE;AAAA,2BACE;AAAI,MAAA,SAAS,EAAEH,CAAC,CAACI,SAAjB;AAAA,gBACGF,OAAO,CAACG,GAAR,CAAaC,MAAD,iBACX;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEH,YAAY,CAACG,MAAD,CAA3C;AAAqD,UAAA,IAAI,EAAEA,MAA3D;AAAA,oBACGA;AADH;AAAA;AAAA;AAAA;AAAA;AADF,SAASA,MAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD,CAdD;;KAAML,e;AAgBN,eAAeA,eAAf","sourcesContent":["import s from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, plusFeedback }) => {\n  return (\n    <>\n      <ul className={s.conteiner}>\n        {options.map((option) => (\n          <li key={option}>\n            <button type=\"button\" onClick={plusFeedback(option)} name={option}>\n              {option}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default FeedbackOptions;\n"]},"metadata":{},"sourceType":"module"}