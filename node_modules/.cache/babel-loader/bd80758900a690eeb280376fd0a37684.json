{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/js/JS _dz/goit-react/goit-react-hw-02-feedback/src/components/App.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Section from \"./Section/Section\";\nimport Notification from \"./Notification/Notification\";\nimport Statistics from \"./Statistics/Statistics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.plusFeedback = option => {\n      this.setState(prevState => {\n        this.total();\n        return {\n          [option]: prevState[option] + 1\n        };\n      });\n    };\n\n    this.total = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      return good + neutral + bad;\n    };\n\n    this.positivePercentage = () => {\n      return Number.parseInt(this.state.good) / Number.parseInt(this.total()) * 100;\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041E\\u0442\\u0437\\u044B\\u0432\\u044B \\u043E \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        titel: \"Пожалуйста оставте свой отзыв\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: [\"good\", \"neutral\", \"bad\"],\n          plusFeedback: this.plusFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        titel: \"Пожалуйста оставте свой отзыв\",\n        children: this.total() ? /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: this.total(),\n          positivePercentage: this.positivePercentage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n          message: \"Нет отзывов о компании\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nApp.propTypes = {\n  good: PropTypes.string,\n  neutral: PropTypes.string,\n  bad: PropTypes.string\n};\nexport default App;","map":{"version":3,"sources":["/Users/mac/Desktop/js/JS _dz/goit-react/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","PropTypes","FeedbackOptions","Section","Notification","Statistics","App","state","good","neutral","bad","plusFeedback","option","setState","prevState","total","positivePercentage","Number","parseInt","render","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BO,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADkB;;AAAA,SAO1BC,YAP0B,GAOVC,MAAD,IAAY;AACzB,WAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAKC,KAAL;AACA,eAAO;AAAE,WAACH,MAAD,GAAUE,SAAS,CAACF,MAAD,CAAT,GAAoB;AAAhC,SAAP;AACD,OAHD;AAID,KAZyB;;AAAA,SAc1BG,KAd0B,GAclB,MAAM;AACZ,YAAM;AAAEP,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAyB,KAAKH,KAApC;AACA,aAAOC,IAAI,GAAGC,OAAP,GAAiBC,GAAxB;AACD,KAjByB;;AAAA,SAkB1BM,kBAlB0B,GAkBL,MAAM;AACzB,aACGC,MAAM,CAACC,QAAP,CAAgB,KAAKX,KAAL,CAAWC,IAA3B,IAAmCS,MAAM,CAACC,QAAP,CAAgB,KAAKH,KAAL,EAAhB,CAApC,GAAqE,GADvE;AAGD,KAtByB;AAAA;;AAwB1BI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE,+BAAhB;AAAA,+BACE,QAAC,eAAD;AACE,UAAA,OAAO,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,KAApB,CADX;AAEE,UAAA,YAAY,EAAE,KAAKI;AAFrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE,+BAAhB;AAAA,kBACG,KAAKI,KAAL,kBACC,QAAC,UAAD;AACE,UAAA,IAAI,EAAEP,IADR;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,GAAG,EAAEC,GAHP;AAIE,UAAA,KAAK,EAAE,KAAKK,KAAL,EAJT;AAKE,UAAA,kBAAkB,EAAE,KAAKC,kBAAL;AALtB;AAAA;AAAA;AAAA;AAAA,gBADD,gBASC,QAAC,YAAD;AAAc,UAAA,OAAO,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA,oBADF;AAwBD;;AAlDyB;;AAqD5BV,GAAG,CAACc,SAAJ,GAAgB;AACdZ,EAAAA,IAAI,EAAEP,SAAS,CAACoB,MADF;AAEdZ,EAAAA,OAAO,EAAER,SAAS,CAACoB,MAFL;AAGdX,EAAAA,GAAG,EAAET,SAAS,CAACoB;AAHD,CAAhB;AAMA,eAAef,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Section from \"./Section/Section\";\nimport Notification from \"./Notification/Notification\";\nimport Statistics from \"./Statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  plusFeedback = (option) => {\n    this.setState((prevState) => {\n      this.total();\n      return { [option]: prevState[option] + 1 };\n    });\n  };\n\n  total = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  positivePercentage = () => {\n    return (\n      (Number.parseInt(this.state.good) / Number.parseInt(this.total())) * 100\n    );\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <h1>Отзывы о компании</h1>\n        <Section titel={\"Пожалуйста оставте свой отзыв\"}>\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            plusFeedback={this.plusFeedback}\n          />\n        </Section>\n        <Section titel={\"Пожалуйста оставте свой отзыв\"}>\n          {this.total() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.total()}\n              positivePercentage={this.positivePercentage()}\n            />\n          ) : (\n            <Notification message={\"Нет отзывов о компании\"} />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nApp.propTypes = {\n  good: PropTypes.string,\n  neutral: PropTypes.string,\n  bad: PropTypes.string,\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}